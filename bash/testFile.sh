#!/bin/bash

function charactername() { #Creates a random string with 3 to 12 characters for name
    letters="abcdefghigklmnopqrstuvwxyz"
    name=""
    nameLength=$((3+$RANDOM % 10))
    for ((j=1;j<=$nameLength;j++));
    do
        randNum=$(($RANDOM % 26))
        name+=${letters:$randNum:1}
    done
}

function charactersurname() { #Creates a random string with 3 to 12 characters for name
    letters="abcdefghigklmnopqrstuvwxyz"
    surname=""
    surnameLenght=$((3+$RANDOM % 10))
    for ((k=1;k<=$surnameLenght;k++));
    do
        randNum=$(($RANDOM % 26))
        surname+=${letters:$randNum:1}
    done
}

#Reading and storing the arguments from the command line
#Also I check for the number of arguments so they are correct
if [ $# -eq 4 ];
then
        virusesFile=$1
        countriesFile=$2
        numLines=$3
        duplicatesAllowed=$4
        echo "Total arguments : $#"
        echo "Number of lines = $numLines"
        echo "Duplicates Allowed = $duplicatesAllowed"
else
        echo "Incorrect number of arguments passed"
        echo "There must be a total of 4 arguments" 
        exit 1
fi
numOfViruses=$(tail -n 1 $virusesFile)
echo "The number of input viruses is: $numOfViruses"
numOfCountries=$(tail -n 1 $countriesFile)
echo "The number of input countries is: $numOfCountries"

#Reading all viruses from virusesFile and putting them in an array so they can be used later
i=0
while read virus
do
    virus=${virus//$'\r'/}
    virusesArray[$i]=$virus
    i=$i+1
done < $virusesFile

#Reading all viruses from countriesFile and putting them in an array so they can be used later
i=0
while read country
do
    country=${country//$'\r'}
    countriesArray[$i]=$country
    i=$i+1
done < $countriesFile


yes="YES"
no="NO"

#Checking if the file that exists
inputFile=../inputFile/citizenRecordsFile
if [ -f "$inputFile" ]; then
    echo "$inputFile exists."
    rm -r $inputFile
    echo "$inputFile deleted."
fi

#Declaring an array that is used so that if a duplicate appears
#randomly I rejected all the duplicates are generated by the
#program manually not randomly. If it appears I check it and
#I continue to the next itteration.
declare -a citizenIDarray


for ((i=0;i<$numLines;i++));
do
    #Picking a random Virus from the virus array
    randIndexVirus=$(($RANDOM % $numOfViruses))
    #Picking a random Country from the country array
    randIndexCountry=$(($RANDOM % $numOfCountries))
    #Picking a random integer between 1 and 9999 to be used as a citizen id
    citizenID=$((1+$RANDOM % 9999))

    #If a duplicate citizen id appears I reject
    if [[ ${citizenIDarray[citizenID]} == $citizenID ]]
    then
        i=$(($i-1))
        continue
    fi
    citizenIDarray[$citizenID]=$citizenID
    age=$((1+$RANDOM % 120))    

    #Creating name and surname using the functions charactername and charactersurname
    charactername
    charactersurname

    #Calculating the chance for if the citizen will be vaccinated or not
    vaccination=$(($RANDOM % 2))

    if [ $vaccination -eq 1 ];
    then
        #If the citizen is vaccinated I create a random date from 1-1-2019 to 12-12-2021
        day=$((1+$RANDOM % 30))
        month=$((1+$RANDOM % 12))
        year=$((2019+$RANDOM % 3))
        date=$day
        date+="-"
        date+=$month
        date+="-"
        date+=$year
        #Creating the record with all its components with the vaccinated option
        inputLine="$citizenID $name $surname ${countriesArray[randIndexCountry]} $age ${virusesArray[randIndexVirus]} $yes $date"
    else
        #Creating the record with all its components with the non-vaccinated option
        inputLine="$citizenID $name $surname ${countriesArray[randIndexCountry]} $age ${virusesArray[randIndexVirus]} $no"
    fi

    #Inserting the record to the file
    echo $inputLine >> $inputFile

    #Case that the option duplicates allowed is enabled
    if [ $duplicatesAllowed -eq 1 ];
    then
        
        #If we are a the last record we can;t create a duplicate because it will exceed the number of lines
        if [ $i -lt $(($numLines-1)) ];
        then
            #Calculating the possibility that a duplicate of the previously created citizen
            #The possibility that a duplicate will be created is 10%
            duplicate=$(($RANDOM % 10))
            if [ $duplicate -eq 0 ];
            then
                #In the duplicate record citizen id name surname age and country are the same as the previous one
                #only virus, posssibility of vaccination and date are reculculated

                #Recalculating the chance for if the citizen will be vaccinated or not
                vaccination=$(($RANDOM % 2))
                #Recalculating the virus that will be inserted in the duplicate record
                randIndexVirus=$(($RANDOM % $numOfViruses))
                if [ $vaccination -eq 1 ];
                then
                    #Recalculating date
                    day=$((1+$RANDOM % 30))
                    month=$((1+$RANDOM % 12))
                    year=$((2020+$RANDOM % 2))
                    date=$day
                    date+="-"
                    date+=$month
                    date+="-"
                    date+=$year
                    #Recreating the record with all its components with the vaccinated option
                    inputLine="$citizenID $name $surname ${countriesArray[randIndexCountry]} $age ${virusesArray[randIndexVirus]} $yes $date"
                else
                    #Recreating the record with all its components with the non-vaccinated option
                    inputLine="$citizenID $name $surname ${countriesArray[randIndexCountry]} $age ${virusesArray[randIndexVirus]} $no"
                fi
                #Inserting line in the file
                echo $inputLine >> $inputFile
                #Increasing the number lines that have been created so far because in this iteration there were 2 records created
                i=$(($i+1))
            fi
        fi
    fi
done

